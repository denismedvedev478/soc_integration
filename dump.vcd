$date
	Wed May  7 02:16:20 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_funcQ $end
$var wire 1 ! Q_vld $end
$var wire 16 " Q [15:0] $end
$var parameter 32 # DATA_WIDTH $end
$var reg 16 $ a [15:0] $end
$var reg 16 % a1 [15:0] $end
$var reg 16 & a2 [15:0] $end
$var reg 16 ' b [15:0] $end
$var reg 16 ( b1 [15:0] $end
$var reg 16 ) b2 [15:0] $end
$var reg 16 * c [15:0] $end
$var reg 16 + c1 [15:0] $end
$var reg 16 , c2 [15:0] $end
$var reg 1 - clk $end
$var reg 16 . d [15:0] $end
$var reg 16 / d1 [15:0] $end
$var reg 16 0 d2 [15:0] $end
$var reg 1 1 data_vld $end
$var reg 1 2 rst $end
$scope module DUT $end
$var wire 16 3 a [15:0] $end
$var wire 16 4 b [15:0] $end
$var wire 16 5 c [15:0] $end
$var wire 1 - clk $end
$var wire 16 6 d [15:0] $end
$var wire 1 1 data_vld $end
$var wire 1 2 rst $end
$var parameter 32 7 DATA_WIDTH $end
$var reg 16 8 Q [15:0] $end
$var reg 1 ! Q_vld $end
$var reg 16 9 a_r [15:0] $end
$var reg 16 : b_r [15:0] $end
$var reg 16 ; c_r [15:0] $end
$var reg 16 < d_r [15:0] $end
$var reg 16 = d_r2 [15:0] $end
$var reg 16 > d_r3 [15:0] $end
$var reg 32 ? tmp1 [31:0] $end
$var reg 32 @ tmp2 [31:0] $end
$var reg 32 A tmp3 [31:0] $end
$var reg 32 B tmp4 [31:0] $end
$var reg 1 C vld_r $end
$var reg 1 D vld_r2 $end
$var reg 1 E vld_r3 $end
$var reg 1 F vld_r4 $end
$upscope $end
$scope task check_result $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 7
b10000 #
$end
#0
$dumpvars
xF
0E
0D
0C
b0 B
b0 A
b0 @
b0 ?
bx >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
bx 6
bx 5
bx 4
bx 3
12
x1
b1 0
b101 /
bx .
0-
b1111111111111110 ,
b1111111111111111 +
bx *
b11 )
b101 (
bx '
b1100 &
b1011 %
bx $
b0 "
0!
$end
#5
02
b0 .
b0 6
b0 *
b0 5
b0 '
b0 4
b0 $
b0 3
01
1-
#10
0-
#15
0F
1-
#20
0-
#25
1-
#30
0-
#35
1-
#40
0-
#45
b101 .
b101 6
b1111111111111111 *
b1111111111111111 5
b101 '
b101 4
b1011 $
b1011 3
11
1-
#50
0-
#55
1C
b101 <
b1111111111111111 ;
b101 :
b1011 9
b1 .
b1 6
b1111111111111110 *
b1111111111111110 5
b11 '
b11 4
b1100 $
b1100 3
1-
#60
0-
#65
1D
b101 =
b11111111111111111111111111111110 @
b110 ?
b1 <
b1111111111111110 ;
b11 :
b1100 9
b0 .
b0 6
b0 *
b0 5
b0 '
b0 4
b0 $
b0 3
01
1-
#70
0-
#75
1E
b101 >
b11111111111111111111111111110100 A
b1 =
b11111111111111111111111111111011 @
b1001 ?
0C
1-
#80
0-
#85
1F
b11111111111111111111111111100000 B
b1 >
b11111111111111111111111111010011 A
0D
1-
#90
0-
#95
1!
b1111111111110000 "
b1111111111110000 8
b11111111111111111111111111001111 B
0E
1-
#100
0-
#105
b1111111111100111 "
b1111111111100111 8
0F
1-
#110
0-
#115
0!
1-
